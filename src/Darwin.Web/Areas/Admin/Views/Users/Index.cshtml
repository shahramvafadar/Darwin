@model Darwin.Web.Areas.Admin.ViewModels.Identity.UsersListVm
@{
    ViewData["Title"] = "Users";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0">Users</h2>
    <a asp-area="Admin" asp-controller="Users" asp-action="Create" class="btn btn-primary">
        <i class="fa fa-plus"></i> Create
    </a>
</div>

<form method="get" class="row g-2 mb-3">
    <div class="col-auto">
        <input type="text" name="q" value="@Model.Query" class="form-control" placeholder="Search by email/name">
    </div>
    <div class="col-auto">
        <select name="pageSize" class="form-select">
            @foreach (var s in Model.PageSizeItems)
            {
                <option value="@s.Value" selected="@s.Selected">@s.Text</option>
            }
        </select>
    </div>
    <div class="col-auto">
        <button class="btn btn-outline-secondary" type="submit"><i class="fa fa-search"></i> Search</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-sm table-hover align-middle">
        <thead>
            <tr>
                <th>Email</th>
                <th>Name</th>
                <th class="text-center">Active</th>
                <th class="text-end" style="width:410px">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var u in Model.Items)
            {
                <tr>
                    <td>@u.Email</td>
                    <td>@($"{u.FirstName} {u.LastName}".Trim())</td>
                    <td class="text-center">
                        @if (u.IsActive)
                        {
                            <span class="badge text-bg-success">Yes</span>
                        }
                        else
                        {

                            <span class="badge text-bg-secondary">No</span>
                        }
                    </td>
                    <td class="text-end">
                        <a asp-area="Admin" asp-controller="Users" asp-action="Edit" asp-route-id="@u.Id" class="btn btn-sm btn-outline-primary">
                            <i class="fa fa-pen"></i> Edit
                        </a>

                        <a asp-area="Admin"
                           asp-controller="Users"
                           asp-action="ChangeEmail"
                           asp-route-id="@u.Id"
                           asp-route-currentEmail="@u.Email"
                           class="btn btn-sm btn-outline-secondary">
                            <i class="fa fa-envelope"></i> Email
                        </a>

                        <a asp-area="Admin"
                           asp-controller="Users"
                           asp-action="ChangePassword"
                           asp-route-id="@u.Id"
                           asp-route-email="@u.Email"
                           class="btn btn-sm btn-outline-secondary">
                            <i class="fa fa-key"></i> Password
                        </a>

                        <a asp-area="Admin" asp-controller="Users" asp-action="Roles" asp-route-id="@u.Id"
                           class="btn btn-sm btn-outline-primary">
                            <i class="fa fa-users-cog"></i> Roles
                        </a>

                        @if (!u.IsSystem)
                        {
                            <button type="button"
                                    class="btn btn-sm btn-outline-danger"
                                    data-bs-toggle="modal"
                                    data-bs-target="#confirmDeleteModal"
                                    data-action="@Url.Action("Delete", "Users", new { area = "Admin" })"
                                    data-id="@u.Id"
                                    data-name="@u.Email"
                                    data-rowversion="@Convert.ToBase64String(u.RowVersion)">
                                <i class="fa fa-trash"></i> Delete
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    // Simple pager (optional): render if needed based on Total/PageSize
    var totalPages = (int)Math.Ceiling((decimal)Model.Total / Model.PageSize);
    if (totalPages > 1)
    {
        <nav>
            <ul class="pagination pagination-sm">
                @for (var p = 1; p <= totalPages; p++)
                {
                    <li class="page-item @(p == Model.Page ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = p, pageSize = Model.PageSize, q = Model.Query })">@p</a>
                    </li>
                }
            </ul>
        </nav>
    }
}

<partial name="~/Areas/Admin/Views/Shared/_ConfirmDeleteModal.cshtml" />
