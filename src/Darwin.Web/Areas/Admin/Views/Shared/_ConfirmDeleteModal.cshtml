@* 
    Reusable Bootstrap 5 modal for delete confirmations.
    - Mobile-friendly full-width modal on small screens.
    - Posts a form with antiforgery token to the supplied action.
    - Controller/action/area/route values come from data-* attributes set by the opener button.
*@
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="confirmDeleteForm" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteTitle">Confirm delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <p class="mb-1">This action cannot be undone.</p>
                    <p class="mb-0 text-muted"><span id="confirmDeleteItemName"></span></p>
                    <input type="hidden" name="id" id="confirmDeleteId" />
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function() {
          const modalEl = document.getElementById('confirmDeleteModal');
          if (!modalEl) return;
          const modal = new bootstrap.Modal(modalEl);
          const form = document.getElementById('confirmDeleteForm');
          const idInput = document.getElementById('confirmDeleteId');
          const itemSpan = document.getElementById('confirmDeleteItemName');

          document.addEventListener('click', function (e) {
            const btn = e.target.closest('[data-delete="open-modal"]');
            if (!btn) return;

            const area = btn.getAttribute('data-area') || '';
            const controller = btn.getAttribute('data-controller');
            const action = btn.getAttribute('data-action');
            const id = btn.getAttribute('data-id');
            const name = btn.getAttribute('data-name') || '';

            // Build form action with asp-* equivalent routing
            const base = area ? `/${area}/${controller}/${action}` : `/${controller}/${action}`;
            form.setAttribute('action', base);
            idInput.value = id;
            itemSpan.textContent = name ? `Item: ${name}` : '';

            modal.show();
          });
        })();
    </script>
}
